// <auto-generated />
using System;
using Agenda_Tup_Back.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendaTupBack.Migrations
{
    [DbContext(typeof(AgendaApiContext))]
    [Migration("20221125011719_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Agenda_Tup_Back.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alias")
                        .HasColumnType("TEXT");

                    b.Property<string>("CelularNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GroupId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            CelularNumber = "+54341234975",
                            Email = "Amigo@gmail.com",
                            GroupId = 2,
                            LastName = "Cruz",
                            Name = "Esmeralda",
                            TelephoneNumber = "4214587",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CelularNumber = "+54114567789",
                            GroupId = 2,
                            LastName = "Romero",
                            Name = "Daniela",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Mary",
                            CelularNumber = "+54341345367",
                            GroupId = 1,
                            LastName = "Martinez",
                            Name = "Maria",
                            UserId = 1
                        },
                        new
                        {
                            Id = 1,
                            Alias = "Juanito",
                            CelularNumber = "+543436789513",
                            Email = "Hijo@gmail.com",
                            GroupId = 1,
                            LastName = "Castillo",
                            Name = "Juan",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Agenda_Tup_Back.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupName = "Familia"
                        },
                        new
                        {
                            Id = 2,
                            GroupName = "Amigos"
                        });
                });

            modelBuilder.Entity("Agenda_Tup_Back.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rol")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("state")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Email = "danaMolina@gmail.com",
                            LastName = "Molina",
                            Password = "456def",
                            Rol = 1,
                            UserName = "Dana",
                            state = 0
                        },
                        new
                        {
                            Id = 1,
                            Email = "ericaGomez@gmail.com",
                            LastName = "Lechuga",
                            Password = "123abc",
                            Rol = 0,
                            UserName = "Erica",
                            state = 0
                        });
                });

            modelBuilder.Entity("Agenda_Tup_Back.Entities.Contact", b =>
                {
                    b.HasOne("Agenda_Tup_Back.Entities.Group", "Group")
                        .WithMany("Contact")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agenda_Tup_Back.Entities.User", "User")
                        .WithMany("Contact")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Agenda_Tup_Back.Entities.Group", b =>
                {
                    b.Navigation("Contact");
                });

            modelBuilder.Entity("Agenda_Tup_Back.Entities.User", b =>
                {
                    b.Navigation("Contact");
                });
#pragma warning restore 612, 618
        }
    }
}
